openapi: 3.0.0

info: 
  title: Shopease
  description: The API collection for Shopease
  version: 1.0.0

servers: 
  - url: http://localhost:9000/api/v1
    description: Shopease Development Server
  - url: http://api.shopease.shubhampurwar.in/api/v1
    description: Shopease Production Server

tags: 
  - name: Authentication
    description: Authentication API
  - name: Users
    description: Users API
  - name: Addresses
    description: Addresses API
  - name: Cart
    description: Cart API
  - name: Wishlist
    description: Wishlist API
  - name: Products
    description: Products API
  - name: Categories
    description: Categories API
  - name: Brands
    description: Brands API
  - name: Coupons
    description: Coupons API
  - name: Orders
    description: Orders API
  - name: Reviews
    description: Reviews API
    
paths: 
  /auth/signup:
    post: 
      tags: 
        - Authentication
      description: Creates an account or restores a deleted one
      operationId: signup
      requestBody: 
        description: A JSON object containing signup info
        required: true
        content: 
          application/json:
            schema: 
              type: object
              properties: 
                firstname: 
                  type: string
                lastname:
                  type: string
                email:
                  type: string
                phone: 
                  type: string
                password: 
                  type: string
                confirmPassword: 
                  type: string
      responses: 
        '200': 
          description: Restored account
          content:
            application/json:
              schema: 
                type: object
                properties:
                  success:
                    type: boolean
                  message:
                    type: string
                  data:
                    $ref: '#/components/schemas/User'
        '201':
          description: Newly created account
          content: 
            application/json:
              schema: 
                type: object
                properties: 
                  success: 
                    type: boolean
                  message: 
                    type: string
                  data:
                    $ref: '#/components/schemas/User'
  /auth/login: 
    post:
      tags:
        - Authentication
      description: Allows users to login using their email address and password
      operationId: login
      requestBody:
        description: A JSON object containing login info
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                password: 
                  type: string
      responses:
        '200': 
          description: Login success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Success'

  /auth/logout:
    post:
      tags:
        - Authentication
      description: Allows users to log out
      operationId: logout
      responses:
        '200':
          description: Logout success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Success'
  
  /auth/password/forgot:
    post:
      tags:
        - Authentication
      description: Sends an email to the user with reset password link
      operationId: forgotPassword
      requestBody:
        description: A JSON object containing an email address
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
      responses:
        '200':
          description: Password reset email sent successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Success'

  /auth/password/reset/{token}:
    put:
      tags: 
        - Authentication
      description: Allows users to reset their account password
      operationId: resetPassword
      parameters:
        - in: path
          name: token
          required: true
          description: Reset password token
          schema:
            type: string
      requestBody:
        description: A JSON object containing new and confirmed passwords
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                password:
                  type: string
                confirmPassword:
                  type: string
      responses:
        '200':
          description: Password reset success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Success'

  /users/self:
    get:
      tags:
        - Users
      description: Allows users to fetch their profile
      operationId: getProfile
      responses:
        '200':
          description: User profile
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  message: 
                    type: string
                  data:
                    $ref: '#/components/schemas/User'
    
    put:
      tags:
        - Users
      description: Allows users to update their profile
      operationId: updateProfile
      requestBody:
        description: A JSON object containing new profile info
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                firstname:
                  type: string
                lastname:
                  type: string
                phone: 
                  type: string
                password:
                  type: string
                confirmPassword:
                  type: string
      responses:
        '200':
          description: Updated profile
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  message: 
                    type: string
                  data:
                    $ref: '#/components/schemas/User'

    delete:
      tags:
        - Users
      description: Allows users to delete their account
      operationId: deleteAccount
      responses:
        '200':
          description: Account successfully deleted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Success'

  /users/self/avatar:
    post:
      tags:
        - Users
      description: Allows users to add their profile photo
      operationId: addProfilePhoto
      requestBody:
        description: Payload containing an image in binary encoded format
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                avatar:
                  type: string
                  format: binary
              required:
                - avatar
            encoding:
              avatar:
                content-type: image/*
      responses:
        '200':
          description: Updated profile
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  message:
                    type: string
                  data:
                    $ref: '#/components/schemas/User'

    put:
      tags:
        - Users
      description: Allows users to remove their profile photo
      operationId: removeProfilePhoto
      responses:
        '200':
          description: Updated profile
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  message:
                    type: string
                  data:
                    $ref: '#/components/schemas/User'

  /users/self/avatar/update:
    post:
      tags:
        - Users
      description: Allows users to update their profile photo
      operationId: updateProfilePhoto
      requestBody:
        description: Payload containing an image in binary encoded format
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                avatar:
                  type: string
                  format: binary
              required:
                - avatar
            encoding:
              avatar:
                content-type: image/*
      responses:
        '200':
          description: Updated profile
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  message:
                    type: string
                  data:
                    $ref: '#/components/schemas/User'

  /admin/users:
    get:
      tags: 
        - Users
      description: Allows admins to fetch a list of users
      operationId: getUsers
      parameters:
        - in: query
          name: roles
          description: Field to filter users based on their role
          schema:
            type: array
            items: 
              type: string
              enum:
                - user
                - admin
            style: form
            explode: false
        - in: query
          name: sort
          description: Field to sort users by name in asc|desc order
          schema:
            type: string
            enum:
              - name_asc
              - name_desc
        - $ref: '#/components/parameters/Page'
      responses:
        '200':
          description: List of users
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  message:
                    type: string
                  data: 
                    type: array
                    items:
                      $ref: '#/components/schemas/User'
          headers:
            X-Total-Count:
              description: Total number of users
              schema:
                type: integer
                format: int32

  /admin/users/{userId}:
    get:
      tags: 
        - Users
      description: Allows admins to fetch a user by ID
      operationId: getUserbyId
      parameters:
        - in: path
          name: userId
          required: true
          description: ID of the user to be fetched
          schema:
            type: string
      responses:
        '200':
          description: User object
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  message:
                    type: string
                  data:
                    $ref: '#/components/schemas/User'

    put:
      tags: 
        - Users
      description: Allows admins to update role of a user
      operationId: updateUserRole
      parameters:
        - in: path
          name: userId
          required: true
          description: ID of the user whose role is to be updated
          schema:
            type: string
      requestBody:
        description: A JSON object containing new role
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                role:
                  type: string
      responses:
        '200':
          description: Updated user object
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  message:
                    type: string
                  data:
                    $ref: '#/components/schemas/User'
    delete:
      tags:
        - Users
      description: Allows admins to delete a user
      operationId: deleteUser
      parameters:
        - in: path
          name: userId
          required: true
          description: ID of the user to be deleted
          schema:
            type: string
      responses: 
        '200':
          description: User successfully deleted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Success'

  /admin/admins: 
    get:
      tags: 
        - Users
      description: Allows admins to fetch a list of other admins
      operationId: getOtherAdmins
      responses:
        '200':
          description: List of admins
          content:
            application/json:
              schema:
                type: object
                properties:
                  success: 
                    type: boolean
                  message:
                    type: string
                  data: 
                    type: array
                    items:
                      $ref: '#/components/schemas/User'
                  
  /admin/self:
    put:
      tags:
        - Users
      description: Allows admins to demote themselves to the role of a user
      operationId: adminSelfDemote
      responses:
        '200':
          description: Updated user object
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  message:
                    type: string
                  data: 
                    $ref: '#/components/schemas/User'

    delete:
      tags:
        - Users
      description: Allows admins to delete their accounts
      operationId: adminSelfDelete
      responses:
        '200':
          description: Admin successfully deleted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Success'

  /addresses:
    get:
      tags:
        - Addresses
      description: Allows users to fetch their addresses
      operationId: getAddresses
      responses:
        '200':
          description: List of addresses
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  message:
                    type: string
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Address'

    post:
      tags: 
        - Addresses
      description: Allows users to add a new address
      operationId: addNewAddress 
      requestBody:
        description: A JSON object containing address info
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                fullname:
                  type: string
                phone:
                  type: string
                line1:
                  type: string
                line2:
                  type: string
                landmark:
                  type: string
                country:
                  type: string
                state:
                  type: string
                city:
                  type: string
                postalCode:
                  type: string
                isDefault:
                  type: boolean
                  default: false
      responses:
        '201':
          description: Address object
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  message:
                    type: string
                  data:
                    $ref: '#/components/schemas/Address'
  
  /addresses/{addressId}:
    get:
      tags:
        - Addresses
      description: Allows users to fetch one of their addresses by ID
      operationId: getAddressById
      parameters:
        - in: path
          name: addressId
          required: true
          description: ID of the address to be fetched
          schema:
            type: string
      responses:
        '200':
          description: Address object
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  message:
                    type: string
                  data:
                    $ref: '#/components/schemas/Address'

    put:
      tags:
        - Addresses
      description: Allows users to update their address
      operationId: updateAddress
      parameters:
        - in: path
          name: addressId
          required: true
          description: ID of the address to be updated
          schema:
            type: string
      requestBody:
        description: A JSON object containing new address info
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                fullname:
                  type: string
                phone:
                  type: string
                line1:
                  type: string
                line2:
                  type: string
                landmark:
                  type: string
                country:
                  type: string
                state:
                  type: string
                city:
                  type: string
                postalCode:
                  type: string
                isDefault:
                  type: boolean
                  default: false
      responses:
        '200':
          description: Updated address object
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  message:
                    type: string
                  data:
                    $ref: '#/components/schemas/Address'
    
    delete:
      tags:
        - Addresses
      description: Allows users to delete their address
      operationId: deleteAddress
      parameters:
        - in: path
          name: addressId
          required: true
          description: ID of the address to be deleted
          schema:
            type: string
      responses:
        '200':
          description: Address successfully deleted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Success'

  /addresses/{addressId}/default:
    put:
      tags:
        - Addresses
      description: Allows users to set one of their addresses as the default
      operationId: setDefaultAddress
      parameters:
        - in: path
          name: addressId
          required: true
          description: ID of the address to be set as the default
          schema:
            type: string
      responses:
        '200':
          description: Default address
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  message:
                    type: string
                  data:
                    $ref: '#/components/schemas/Address'

components:
  parameters:
    Page:
      in: query
      name: page
      description: Number of records to skip
      schema: 
        type: integer
        format: int32
        minimum: 1

  schemas:
    Success:
      type: object
      properties:
        success:
          type: boolean
        message:
          type: string

    User: 
      type: object
      properties: 
        id: 
          type: string
        firstname: 
          type: string
        lastname: 
          type: string
        fullname:
          type: string
        email:
          type: string
        phone: 
          type: string
        role:
          type: string
        avatar:
          type: object
          properties:
            url:
              type: string
            publicId:
              type: string
        cart:
          type: array
          items:
            type: object
            properties:
              product:
                type: string
              quantity:
                type: integer
        wishlist:
          type: array
          items:
            type: string
        resetPasswordToken:
          type: string
        resetPasswordExpiry:
          type: string
        isDeleted:
          type: boolean
        deletedBy:
          type: string
        roleLastUpdatedBy:
          type: string
        deletedAt:
          type: string
        roleUpdatedAt:
          type: string
        createdAt:
          type: string
        updatedAt:
          type: string
      required:
        - id
        - firstname
        - lastname
        - fullname
        - email
        - phone
        - role
        - cart
        - wishlist
        - isDeleted
        - createdAt
        - updatedAt

    Address:
      type: object
      properties:
        id:
          type: string
        fullname:
          type: string
        phone: 
          type: string
        line1:
          type: string
        line2:
          type: string
        landmark:
          type: string
        country:
          type: string
        state:
          type: string
        city:
          type: string
        postalCode:
          type: string
        isDefault:
          type: boolean
        user:
          type: string
        isDeleted:
          type: boolean
        createdAt:
          type: string
        updatedAt:
          type: string
      required:
        - id
        - fullname
        - phone
        - line1
        - country
        - state
        - city
        - postalCode
        - isDefault
        - user
        - isDeleted
        - createdAt
        - updatedAt
          